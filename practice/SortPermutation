import java.util.*;

public class AmazonSortPermutation {
    public static void main(String[] args) {
        // Example 1
        int[] p1 = {2, 3, 1, 4};
        int[] m1 = {2, 3};
        System.out.println("Example 1: " + solve(p1, m1));

        // Example 2
        int[] p2 = {4, 5, 1, 3, 2};
        int[] m2 = {1, 2, 3};
        System.out.println("Example 2: " + solve(p2, m2));
    }

    public static String solve(int[] p, int[] m) {
        int swaps = countSwapsUsingCycleSort(p.clone());
        StringBuilder ans = new StringBuilder();

        for (int moves : m) {
            if (moves >= swaps && (moves - swaps) % 2 == 0) {
                ans.append("1");
            } else {
                ans.append("0");
            }
        }

        return ans.toString();
    }

    private static int countSwapsUsingCycleSort(int[] arr) {
        int swaps = 0;
        int n = arr.length;

        for (int cycleStart = 0; cycleStart < n - 1; cycleStart++) {
            int item = arr[cycleStart];
            if (item == cycleStart + 1) continue;

            while (item != cycleStart + 1) {
                int nextPos = item - 1;
                int temp = arr[nextPos];
                arr[nextPos] = item;
                item = temp;
                swaps++;
            }
        }

        return swaps;
    }
}
